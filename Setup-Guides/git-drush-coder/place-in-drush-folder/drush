#!/bin/sh

## dev desktop drush.bat converted to drush bash file for git bash.

# Get current directory of this script.
MY_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

## ## Set PHP_ID if not already set.
## if [ -z ${PHP_ID+x} ]; then
##  ## echo "var is unset";
##  ## If drupal less than 7.5 - then use php 5.6
##  ## export PHP_ID="php5_6"
##
##  ## Use latest PHP version we have.
##  ## \ runs real ls, no alias, with / appended to folders
##  for i in `\ls "$(cd "$MY_SCRIPT_DIR" && cd .. && pwd)" | grep "php[0-9]" | sort -rV`; do
##    export PHP_ID="$i"
##    break
##  done;
##
## #else
##  #echo "var is set to '$PHP_ID'";
## fi

if [ -z ${PHP_ID+x} ]; then
  export PHP_ID="xampp-7-1-64bit"
fi

export PATH="/c/$PHP_ID/mysql/bin:$PATH"
export PATH="/c/$PHP_ID/php:$PATH"

## Run the Dev Desktop SSH setup - optional for drush.
## Remove lines with 1 "#" to activate the call to bat file.
## You may want to edit the bat file and add a "at" symbol @ in front of each command,
## (or add "@echo off") up top for less verbose output.
## SSH_AGENT_PARAMS_FILE="$USERPROFILE/.acquia/DevDesktop/ssh-agent-params.bat"

## If file exists.
#if [ -f "$SSH_AGENT_PARAMS_FILE" ]; then
  ## Run parms file.
  #"$SSH_AGENT_PARAMS_FILE"
## else
    ## echo "File does not exist"
    ## echo $SSH_AGENT_PARAMS_FILE
#fi

## Note on running code passed in via parameters:
## To run the code, use single quotes as speech marks are stripped in git bash
## Else if the command has a comma in it, you will get a syntax error.
## For example: drush php-eval 'foreach(array(0,1,2) as $e) { echo $e; }'

## Get the number of columns in the terminal and export so drush fills whole window.
export COLUMNS=$(tput cols)

## Run drush now.
## Set COMPOSER_HOME if not already set try dev desktop one.
if [ -z ${COMPOSER_HOME+x} ]; then
  ## If file exists
##  if [ -f "$USERPROFILE/AppData/Roaming/Composer/vendor/bin/drush.phar" ]; then
##    ## Run drushlauncher script.
##    BIN_TARGET="$USERPROFILE/AppData/Roaming/Composer/vendor/bin/drush.phar"
##  elif [ -f "$MY_SCRIPT_DIR/drush.phar" ]; then
##     ## Run drushlauncher script
##    BIN_TARGET="$MY_SCRIPT_DIR/drush.phar"
##  el
  if [ -f "$USERPROFILE/AppData/Roaming/Composer/vendor/drush/drush/drush.php" ]; then
    ## Run drush php script.
    ## Note:  "drush.php" script might fail on updb with file/volume incorrect error.
    BIN_TARGET="$USERPROFILE/AppData/Roaming/Composer/vendor/drush/drush/drush.php"
  elif [ -f "$MY_SCRIPT_DIR/vendor/drush/drush/drush.php" ]; then
    ## fallback to devdesktop drush.php
    BIN_TARGET="$MY_SCRIPT_DIR/vendor/drush/drush/drush.php"
  fi
else
##  if [ -f "$COMPOSER_HOME/vendor/bin/drush.phar" ]; then
##    BIN_TARGET="$COMPOSER_HOME/vendor/bin/drush.phar"
##  el
  if [ -f "$COMPOSER_HOME/vendor/drush/drush/drush.php" ]; then
    BIN_TARGET="$COMPOSER_HOME/vendor/drush/drush/drush.php"
  fi
fi

## if dir wasn't set
if [ -z ${BIN_TARGET+x} ]; then
  ## echo "var is unset";
  echo "drush not found. RUN:"
  echo "------------------------"
  echo "composer global require drush/drush:8.*"
  echo "------------------------"
  echo "to download it. Trying in current dir anyway...."
  BIN_TARGET="$MY_SCRIPT_DIR/vendor/drush/drush/drush"
fi

if !(type "php.exe" &> /dev/null); then
  echo php.exe was not found.
  echo Available folder names are: \(export PHP_ID=foldername\)
  # Start with d is a folder
  # Match php_NUM_NUM
  # ls "$(cd "$MY_SCRIPT_DIR" && cd .. && pwd)" -l | grep ^d | grep php[0-9]_[0-9]
  find /c/ -mindepth 1 -maxdepth 1 -type d -printf '%f\n' | grep ^xampp
  # Exit with error code 1
  exit 1
else
  php.exe "$BIN_TARGET" --php="php.exe" "$@"
fi
